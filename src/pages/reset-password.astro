---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Reset Password - ABlog" description="Set a new password for your ABlog account">
    <section class="py-12">
        <div class="container mx-auto px-4 max-w-md">
            <div class="bg-black rounded-lg shadow-md p-8 border border-gray-800 text-white">
                <div class="text-center mb-8">
                    <h1 class="text-3xl font-bold mb-2 text-white">Reset Password</h1>
                    <p class="text-gray-400">Create a new password for your account</p>
                </div>

                <form id="resetPasswordForm" class="space-y-6">
                    <div>
                        <label for="email" class="block text-sm font-medium mb-2 text-gray-300">Email</label>
                        <input
                            type="email"
                            id="email"
                            placeholder="Enter your email"
                            class="w-full px-4 py-2 bg-gray-900 border border-gray-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent"
                            required
                            readonly
                        />
                    </div>

                    <div>
                        <label for="password" class="block text-sm font-medium mb-2 text-gray-300">New Password</label>
                        <input
                            type="password"
                            id="password"
                            placeholder="Enter new password"
                            class="w-full px-4 py-2 bg-gray-900 border border-gray-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent"
                            required
                        />
                        <p class="text-xs text-gray-500 mt-1">Password must be at least 6 characters</p>
                    </div>

                    <div>
                        <label for="confirmPassword" class="block text-sm font-medium mb-2 text-gray-300">Confirm Password</label>
                        <input
                            type="password"
                            id="confirmPassword"
                            placeholder="Confirm new password"
                            class="w-full px-4 py-2 bg-gray-900 border border-gray-700 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent"
                            required
                        />
                    </div>

                    <div id="errorMessage" class="bg-red-900/30 text-red-400 p-4 rounded-md mb-6 border border-red-800 hidden">
                        Error message will appear here
                    </div>

                    <div id="successMessage" class="bg-green-900/30 text-green-400 p-4 rounded-md mb-6 border border-green-800 hidden">
                        Success message will appear here
                    </div>

                    <button
                        type="submit"
                        class="w-full py-3 bg-purple-600 text-white rounded-md hover:bg-purple-700 transition-colors"
                    >
                        Reset Password
                    </button>
                </form>

                <div class="mt-6 text-center">
                    <p class="text-sm text-gray-400">
                        Remember your password? <a href="/login" class="text-purple-400 hover:underline">Sign in</a>
                    </p>
                </div>

                <script>
                    document.addEventListener('DOMContentLoaded', () => {
                        const form = document.getElementById('resetPasswordForm');
                        const emailInput = document.getElementById('email');
                        const passwordInput = document.getElementById('password');
                        const confirmPasswordInput = document.getElementById('confirmPassword');
                        const errorMessage = document.getElementById('errorMessage');
                        const successMessage = document.getElementById('successMessage');

                        // Extract token and email from URL parameters
                        const params = new URLSearchParams(window.location.search);
                        const token = params.get('token');
                        const email = params.get('email');

                        if (email) {
                            emailInput.value = email;
                        }

                        form.addEventListener('submit', async (e) => {
                            e.preventDefault();

                            // Hide messages
                            errorMessage.classList.add('hidden');
                            successMessage.classList.add('hidden');

                            const password = passwordInput.value;
                            const confirmPassword = confirmPasswordInput.value;

                            // Validate inputs
                            if (!password.trim()) {
                                errorMessage.textContent = 'Password is required';
                                errorMessage.classList.remove('hidden');
                                return;
                            }

                            if (password.length < 6) {
                                errorMessage.textContent = 'Password must be at least 6 characters';
                                errorMessage.classList.remove('hidden');
                                return;
                            }

                            if (password !== confirmPassword) {
                                errorMessage.textContent = 'Passwords do not match';
                                errorMessage.classList.remove('hidden');
                                return;
                            }

                            if (!token || !email) {
                                errorMessage.textContent = 'Invalid reset link. Please request a new password reset.';
                                errorMessage.classList.remove('hidden');
                                return;
                            }

                            try {
                                // Call the completePasswordReset function from authService
                                const authService = {
                                    completePasswordReset: async (email, token, newPassword) => {
                                        // This is a simplified version for demo purposes
                                        // In a real app, you would make an API call
                                        console.log(`Password reset completed for ${email}`);

                                        return { success: true };
                                    }
                                };

                                const result = await authService.completePasswordReset(email, token, password);

                                if (result.success) {
                                    successMessage.textContent = 'Your password has been reset successfully! You can now log in with your new password.';
                                    successMessage.classList.remove('hidden');

                                    // Redirect to login page after a delay
                                    setTimeout(() => {
                                        window.location.href = '/login';
                                    }, 3000);
                                } else {
                                    errorMessage.textContent = result.error || 'Failed to reset password';
                                    errorMessage.classList.remove('hidden');
                                }
                            } catch (err) {
                                console.error('Error resetting password:', err);
                                errorMessage.textContent = 'An unexpected error occurred';
                                errorMessage.classList.remove('hidden');
                            }
                        });
                    });
                </script>
            </div>
        </div>
    </section>
</Layout>
